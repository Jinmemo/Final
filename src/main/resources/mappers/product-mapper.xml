<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="productMapper">

	<resultMap type="product" id="productResultSet" autoMapping="true">
		<id column="PROD_NO" property="prodNo" />
		<collection property="detail" javaType="list" ofType="prodDetail"
			select="selectProdDetailList" column="PROD_NO" />
		<collection property="image" javaType="list" ofType="image"
			select="selectProdImageList" column="PROD_NO" />
	</resultMap>
	
	
	<select id="selectProductList" parameterType="map" resultMap="productResultSet">
		SELECT PROD_NO, PROD_NAME, PROD_CAP, PRICE, DISCOUNT_RATE, CATE_SUB, ORDERED, THICKNESS, LINING, SEE_THROUGH, FABRIC, PATTERN, LINE, SEASON, UPLOAD_DATE, STATUS
		FROM PRODUCT
		LEFT JOIN CATE_SUB USING (CATE_SUB)
		<where>
			AND STATUS = 'Y'
			<if test='cateMain != null'>OR CATE_MAIN IN (${cateMain})</if>
			<if test='cateSub != null'>OR CATE_SUB IN (${cateSub})</if>
			<if test='seeThrough != null'>AND SEE_THROUGH = #{cateSub}</if>
			<if test='line != null'>AND LINE = #{cateSub}</if>
		</where>
	</select>

	<select id="getProductById" parameterType="int" resultType="product">
        SELECT *
        FROM PRODUCT
        WHERE PROD_NO = 1
	</select>
	
	<select id="selectProdDetailList" parameterType="int" resultType="prodDetail">
		SELECT "INDEX", PROD_NO, "SIZE", STACK, TOP, BOTTOM, COLOR_NO, COLOR_NAME, RGB 
		FROM PROD_DETAIL
		LEFT JOIN PALETTE USING (COLOR_NO)
		WHERE PROD_NO = #{prodNo} AND STACK > 0
		ORDER BY "INDEX", "SIZE" DESC
	</select>
	
	<select id="selectProdImageList" parameterType="int" resultType="image">
		SELECT IMG_NO, REF_NO, COLOR_NO, IMG_TYPE, IMG_NAME, COLOR_NAME, RGB
		FROM IMAGE
		LEFT JOIN PALETTE USING (COLOR_NO)
		WHERE REF_NO = #{refNo}
	</select>
	
	<select id="selectCartList" resultMap="productResultSet">
	    SELECT *
	    FROM PRODUCT P
	    JOIN PROD_DETAIL D ON P.PROD_NO = D.PROD_NO
	    JOIN IMAGE I ON P.PROD_NO = I.REF_NO
	    WHERE (P.PROD_NO, "INDEX", "SIZE") IN
	    <foreach item="item" collection="list" open="(" separator="," close=")">
	        (#{item.prodNo}, #{item.index}, #{item.size})
	    </foreach>
	</select>

	<select id="selectReviewList" parameterType="int" resultType="review">
		SELECT REVIEW_NO, PROD_NO, MEMBER_NO, MEMBER_NAME, REVIEW_CONTENT, R.CREATE_DATE, RATING, HEIGHT, WEIGHT, TOP, BOTTOM, ISTRUETOSIZE
		FROM REVIEW R
		LEFT JOIN MEMBER USING (MEMBER_NO)
		WHERE R.STATUS = 'Y' AND PROD_NO = #{prodNo}
	</select>

	<select id="selectProdName" parameterType="int" resultType="product">
		SELECT PROD_NO, PROD_NAME, PRICE, DISCOUNT_RATE
		  FROM PRODUCT
		 WHERE PROD_NO = #{prodNo}
	</select>
	
	<select id="selectImgByProdNo">
		SELECT *
		FROM(	SELECT *
				FROM IMAGE
				WHERE REF_NO=#{prodNo}
				AND IMG_TYPE=1
		) WHERE ROWNUM=1
	</select>

	<select id = "selectCateMainList" resultType = "CategoryMain">
		SELECT CATE_MAIN, MAIN_NAME
		FROM CATE_MAIN	
	</select>
	
	<select id = "selectseeThroughList" resultType = "String">
		SELECT SEE_THROUGH
		FROM PRODUCT
		GROUP BY SEE_THROUGH
	</select>
	
	<select id = "selectColorList" resultType = "Palette">
		SELECT COLOR_NO , COLOR_NAME, RGB
		FROM PALETTE
	</select>
	
	<select id = "selectCateSubList" resultType = "CategorySub">
		SELECT CATE_SUB, SUB_NAME
		FROM CATE_SUB
	</select>
	
	<update id="updateReview" parameterType="review">
		UPDATE REVIEW
		SET REVIEW_CONTENT = #{reviewContent},
			RATING = #{rating},
			HEIGHT = #{height},
			WEIGHT = #{weight},
			TOP = #{top},
			BOTTOM = #{bottom},
			ISTRUETOSIZE = #{isTrueToSize}
		WHERE REVIEW_NO = #{reviewNo} AND MEMBER_NO = #{memberNo}
	</update>
	
	<update id="deleteReview" parameterType="int">
		UPDATE REVIEW
		SET STATUS = 'N'
		WHERE REVIEW_NO = #{reviewNo}
	</update>

	<select id="reviewerCheck" parameterType="hashMap" resultType="int">
		SELECT COUNT(*) FROM ORDER_PROD
		LEFT JOIN "ORDER" USING(ORDER_NO)
		WHERE PROD_NO = #{prodNo} AND MEMBER_NO = #{memberNo}
	</select>

	<select id = "selectLining" resultType = "String">
		SELECT LINING
		FROM PRODUCT
		GROUP BY LINING
	</select>
	
	<select id = "selectPrice" resultType = "int">
		SELECT min(PRICE), MAX(PRICE)
		FROM PRODUCT
	</select>
	
 	<select id="selectMainCateList" parameterType="int" resultMap="productResultSet">
		SELECT *
		  FROM PRODUCT
		  LEFT JOIN CATE_SUB USING (CATE_SUB)
		 WHERE CATE_MAIN = #{cateMain}
	</select>
	
	<select id="selectSubCateList" parameterType="map" resultMap="productResultSet">
		SELECT *
		  FROM PRODUCT
		  LEFT JOIN CATE_SUB USING (CATE_SUB)
		 WHERE CATE_MAIN = #{cateMain}
		   AND CATE_SUB = #{cateSub}
	</select> 
	
	<select id="bestProducts" parameterType="map" resultMap="productResultSet">
		SELECT PROD_NO, PROD_NAME, PROD_CAP, PRICE, DISCOUNT_RATE, CATE_SUB, ORDERED, THICKNESS, LINING, SEE_THROUGH, FABRIC, PATTERN, LINE, SEASON, UPLOAD_DATE, STATUS
		FROM PRODUCT
		LEFT JOIN CATE_SUB USING (CATE_SUB)
		<where>
			AND ROWNUM &lt; = 6
		</where>
		ORDER BY ORDERED DESC 
	</select>
	
	<select id="selectRecentList" resultMap="productResultSet">
	    SELECT *
	    FROM PRODUCT P
	    JOIN PROD_DETAIL D ON P.PROD_NO = D.PROD_NO
	    JOIN IMAGE I ON P.PROD_NO = I.REF_NO
	    WHERE P.PROD_NO IN
	    <foreach item="item" collection="list" open="(" separator="," close=")">
	        (#{item.prodNo})
	    </foreach>
	</select>
	
	<select id="outerProducts" parameterType="map" resultMap="productResultSet">
	SELECT *
		FROM PRODUCT
		LEFT JOIN CATE_SUB USING (CATE_SUB)
		WHERE CATE_MAIN = 1
	</select>
	
	<select id="topProducts" parameterType="map" resultMap="productResultSet">
	SELECT *
		FROM PRODUCT
		LEFT JOIN CATE_SUB USING (CATE_SUB)
		WHERE CATE_MAIN = 2
	</select>
	
	<select id="bottomProducts" parameterType="map" resultMap="productResultSet">
	SELECT *
		FROM PRODUCT
		LEFT JOIN CATE_SUB USING (CATE_SUB)
		WHERE CATE_MAIN = 3
	</select>
	
	<select id="underProducts" parameterType="map" resultMap="productResultSet">
	SELECT *
		FROM PRODUCT
		LEFT JOIN CATE_SUB USING (CATE_SUB)
		WHERE CATE_MAIN = 4
	</select>
	
	<select id="accProducts" parameterType="map" resultMap="productResultSet">
	SELECT *
		FROM PRODUCT
		LEFT JOIN CATE_SUB USING (CATE_SUB)
		WHERE CATE_MAIN = 5
	</select>
	
	



<!-- 나중에 쓸 예정, 지우지 말 것 -->
<!-- INSERT INTO prod_detail(
    PROD_NO,
    "INDEX"
) values(
    #{???},
    (select count(*) from prod_detail WHERE prod_no = 2)
) -->
</mapper>